<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yl.client.front.dao.NoticeConfigDao">

	<resultMap id="BaseResultMap" type="com.yl.client.front.model.NoticeConfig">
		<id property="id" jdbcType="BIGINT" column="id" />
		<result property="type" 		column="TYPE" />
		<result property="config" 				column="CONFIG" />
		<result property="createDate" 		column="CREATE_TIME" />
		<result property="name" 			column="NAME" />
		<result property="ownerId" 				column="OWNER_ID" />
		<result property="oem" 		column="OEM" />
		<result property="oper" 			column="OPER" />
		<result property="stauts" 			column="STAUTS" />
		<result property="source" 			column="SOURCE" />
	</resultMap>

	<sql id="commonColumn">
		id,TYPE,CONFIG,CREATE_TIME,NAME,OEM,OPER,STAUTS,SOURCE
	</sql>

   <insert id="createNoticeConfig" parameterType="com.yl.client.front.model.NoticeConfig" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
			NOTICE_CONFIG(TYPE,CONFIG,CREATE_TIME,NAME,OWNER_ID,OEM,OPER,STAUTS,SOURCE)
		VALUES
			(#{type}, #{config}, #{createDate},#{name}, #{ownerId},#{oem}, #{oper},#{stauts}, #{source})
	</insert>
	<update id="updateNoticeConfig" parameterType="com.yl.client.front.model.NoticeConfig">
		UPDATE NOTICE_CONFIG
		SET TYPE=#{type},CONFIG=#{config},NAME=#{name},OEM=#{oem},OPER=#{oper},STAUTS=#{stauts},SOURCE=#{source}
		where id=#{id}
	</update>
	<select id="findNoticeConfigs" resultMap="BaseResultMap">
		SELECT  <include refid="commonColumn"/>
		FROM NOTICE_CONFIG
		<where>
			STAUTS=#{stauts}
		</where>
	</select>
	<select id="findNoticeConfig" resultMap="BaseResultMap">
		select  <include refid="commonColumn"/>
		FROM NOTICE_CONFIG
		<where> id=#{id}
		</where>
	</select>
	<select id="findNoticeConfigByAgentNo" resultMap="BaseResultMap">
		SELECT <include refid="commonColumn"/>
		FROM NOTICE_CONFIG
		<where>
			OWNER_ID=#{ownerId}
		</where>
	</select>

	<select id="findNoticeConfigByOem" resultMap="BaseResultMap">
		select  <include refid="commonColumn"/>
		FROM NOTICE_CONFIG
		<where> OEM=#{oem}
		</where>
	</select>

	<select id="findAllNoticeConfigByInfo" resultMap="BaseResultMap" parameterType="Map">
		SELECT <include refid="commonColumn"/> 
		FROM NOTICE_CONFIG
		<where> 1=1
			<if test="params.type != null and params.type !='' ">
				and TYPE=#{params.type}
			</if>
			<if test="params.config != null and params.config !='' ">
				and CONFIG=#{params.config}
			</if>
			<if test="params.name != null and params.name !='' ">
				and NAME=#{params.name}
			</if>
			<if test="params.ownerId != null and params.ownerId !='' ">
				and OWNER_ID=#{params.ownerId}
			</if>
			<if test="params.oem != null and params.oem !='' ">
				and OEM=#{params.oem}
			</if>
			<if test="params.oper != null and params.oper !='' ">
				and OPER=#{params.oper}
			</if>
			<if test="params.stauts != null and params.stauts !='' ">
				and STAUTS=#{params.stauts}
			</if>
			<if test="params.source != null and params.source !='' ">
				and SOURCE=#{params.source}
			</if>
			<if test="params.createDateStart != null and params.createDateStart !='' ">
				<if test="params.createDateEnd != null and params.createDateEnd !='' ">
					AND CREATE_TIME BETWEEN #{params.createDateStart} AND
					#{params.createDateEnd}
				</if>
				<if test="params.createDateEnd == null or params.createDateEnd =='' ">
					AND CREATE_TIME &gt; #{params.orderTimeStart}
				</if>
			</if>
			<if test="params.createDateEnd != null and params.createDateEnd !='' ">
				<if test="params.createDateStart == null or params.createDateStart =='' ">
					AND CREATE_TIME &lt; #{params.createDateEnd}
				</if>
			</if>
		</where>
	</select>
</mapper>