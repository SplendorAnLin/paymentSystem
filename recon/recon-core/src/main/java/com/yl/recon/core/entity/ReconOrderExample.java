package com.yl.recon.core.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ReconOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public ReconOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Long value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Long value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Long value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Long value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Long value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Long> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Long> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Long value1, Long value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Long value1, Long value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andReconDateIsNull() {
            addCriterion("recon_date is null");
            return (Criteria) this;
        }

        public Criteria andReconDateIsNotNull() {
            addCriterion("recon_date is not null");
            return (Criteria) this;
        }

        public Criteria andReconDateEqualTo(Date value) {
            addCriterionForJDBCDate("recon_date =", value, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("recon_date <>", value, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateGreaterThan(Date value) {
            addCriterionForJDBCDate("recon_date >", value, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("recon_date >=", value, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateLessThan(Date value) {
            addCriterionForJDBCDate("recon_date <", value, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("recon_date <=", value, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateIn(List<Date> values) {
            addCriterionForJDBCDate("recon_date in", values, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("recon_date not in", values, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("recon_date between", value1, value2, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("recon_date not between", value1, value2, "reconDate");
            return (Criteria) this;
        }

        public Criteria andReconTypeIsNull() {
            addCriterion("recon_Type is null");
            return (Criteria) this;
        }

        public Criteria andReconTypeIsNotNull() {
            addCriterion("recon_Type is not null");
            return (Criteria) this;
        }

        public Criteria andReconTypeEqualTo(String value) {
            addCriterion("recon_Type =", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeNotEqualTo(String value) {
            addCriterion("recon_Type <>", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeGreaterThan(String value) {
            addCriterion("recon_Type >", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeGreaterThanOrEqualTo(String value) {
            addCriterion("recon_Type >=", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeLessThan(String value) {
            addCriterion("recon_Type <", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeLessThanOrEqualTo(String value) {
            addCriterion("recon_Type <=", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeLike(String value) {
            addCriterion("recon_Type like", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeNotLike(String value) {
            addCriterion("recon_Type not like", value, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeIn(List<String> values) {
            addCriterion("recon_Type in", values, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeNotIn(List<String> values) {
            addCriterion("recon_Type not in", values, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeBetween(String value1, String value2) {
            addCriterion("recon_Type between", value1, value2, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconTypeNotBetween(String value1, String value2) {
            addCriterion("recon_Type not between", value1, value2, "reconType");
            return (Criteria) this;
        }

        public Criteria andReconStatusIsNull() {
            addCriterion("recon_status is null");
            return (Criteria) this;
        }

        public Criteria andReconStatusIsNotNull() {
            addCriterion("recon_status is not null");
            return (Criteria) this;
        }

        public Criteria andReconStatusEqualTo(String value) {
            addCriterion("recon_status =", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusNotEqualTo(String value) {
            addCriterion("recon_status <>", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusGreaterThan(String value) {
            addCriterion("recon_status >", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusGreaterThanOrEqualTo(String value) {
            addCriterion("recon_status >=", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusLessThan(String value) {
            addCriterion("recon_status <", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusLessThanOrEqualTo(String value) {
            addCriterion("recon_status <=", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusLike(String value) {
            addCriterion("recon_status like", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusNotLike(String value) {
            addCriterion("recon_status not like", value, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusIn(List<String> values) {
            addCriterion("recon_status in", values, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusNotIn(List<String> values) {
            addCriterion("recon_status not in", values, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusBetween(String value1, String value2) {
            addCriterion("recon_status between", value1, value2, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andReconStatusNotBetween(String value1, String value2) {
            addCriterion("recon_status not between", value1, value2, "reconStatus");
            return (Criteria) this;
        }

        public Criteria andMatchAIsNull() {
            addCriterion("match_a is null");
            return (Criteria) this;
        }

        public Criteria andMatchAIsNotNull() {
            addCriterion("match_a is not null");
            return (Criteria) this;
        }

        public Criteria andMatchAEqualTo(String value) {
            addCriterion("match_a =", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchANotEqualTo(String value) {
            addCriterion("match_a <>", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchAGreaterThan(String value) {
            addCriterion("match_a >", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchAGreaterThanOrEqualTo(String value) {
            addCriterion("match_a >=", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchALessThan(String value) {
            addCriterion("match_a <", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchALessThanOrEqualTo(String value) {
            addCriterion("match_a <=", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchALike(String value) {
            addCriterion("match_a like", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchANotLike(String value) {
            addCriterion("match_a not like", value, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchAIn(List<String> values) {
            addCriterion("match_a in", values, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchANotIn(List<String> values) {
            addCriterion("match_a not in", values, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchABetween(String value1, String value2) {
            addCriterion("match_a between", value1, value2, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchANotBetween(String value1, String value2) {
            addCriterion("match_a not between", value1, value2, "matchA");
            return (Criteria) this;
        }

        public Criteria andMatchBIsNull() {
            addCriterion("match_b is null");
            return (Criteria) this;
        }

        public Criteria andMatchBIsNotNull() {
            addCriterion("match_b is not null");
            return (Criteria) this;
        }

        public Criteria andMatchBEqualTo(String value) {
            addCriterion("match_b =", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBNotEqualTo(String value) {
            addCriterion("match_b <>", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBGreaterThan(String value) {
            addCriterion("match_b >", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBGreaterThanOrEqualTo(String value) {
            addCriterion("match_b >=", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBLessThan(String value) {
            addCriterion("match_b <", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBLessThanOrEqualTo(String value) {
            addCriterion("match_b <=", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBLike(String value) {
            addCriterion("match_b like", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBNotLike(String value) {
            addCriterion("match_b not like", value, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBIn(List<String> values) {
            addCriterion("match_b in", values, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBNotIn(List<String> values) {
            addCriterion("match_b not in", values, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBBetween(String value1, String value2) {
            addCriterion("match_b between", value1, value2, "matchB");
            return (Criteria) this;
        }

        public Criteria andMatchBNotBetween(String value1, String value2) {
            addCriterion("match_b not between", value1, value2, "matchB");
            return (Criteria) this;
        }

        public Criteria andMsgIsNull() {
            addCriterion("msg is null");
            return (Criteria) this;
        }

        public Criteria andMsgIsNotNull() {
            addCriterion("msg is not null");
            return (Criteria) this;
        }

        public Criteria andMsgEqualTo(String value) {
            addCriterion("msg =", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgNotEqualTo(String value) {
            addCriterion("msg <>", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgGreaterThan(String value) {
            addCriterion("msg >", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgGreaterThanOrEqualTo(String value) {
            addCriterion("msg >=", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgLessThan(String value) {
            addCriterion("msg <", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgLessThanOrEqualTo(String value) {
            addCriterion("msg <=", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgLike(String value) {
            addCriterion("msg like", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgNotLike(String value) {
            addCriterion("msg not like", value, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgIn(List<String> values) {
            addCriterion("msg in", values, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgNotIn(List<String> values) {
            addCriterion("msg not in", values, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgBetween(String value1, String value2) {
            addCriterion("msg between", value1, value2, "msg");
            return (Criteria) this;
        }

        public Criteria andMsgNotBetween(String value1, String value2) {
            addCriterion("msg not between", value1, value2, "msg");
            return (Criteria) this;
        }

        public Criteria andFailureReasonIsNull() {
            addCriterion("failure_reason is null");
            return (Criteria) this;
        }

        public Criteria andFailureReasonIsNotNull() {
            addCriterion("failure_reason is not null");
            return (Criteria) this;
        }

        public Criteria andFailureReasonEqualTo(String value) {
            addCriterion("failure_reason =", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonNotEqualTo(String value) {
            addCriterion("failure_reason <>", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonGreaterThan(String value) {
            addCriterion("failure_reason >", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonGreaterThanOrEqualTo(String value) {
            addCriterion("failure_reason >=", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonLessThan(String value) {
            addCriterion("failure_reason <", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonLessThanOrEqualTo(String value) {
            addCriterion("failure_reason <=", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonLike(String value) {
            addCriterion("failure_reason like", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonNotLike(String value) {
            addCriterion("failure_reason not like", value, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonIn(List<String> values) {
            addCriterion("failure_reason in", values, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonNotIn(List<String> values) {
            addCriterion("failure_reason not in", values, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonBetween(String value1, String value2) {
            addCriterion("failure_reason between", value1, value2, "failureReason");
            return (Criteria) this;
        }

        public Criteria andFailureReasonNotBetween(String value1, String value2) {
            addCriterion("failure_reason not between", value1, value2, "failureReason");
            return (Criteria) this;
        }

        public Criteria andRepeatNumAIsNull() {
            addCriterion("repeat_num_a is null");
            return (Criteria) this;
        }

        public Criteria andRepeatNumAIsNotNull() {
            addCriterion("repeat_num_a is not null");
            return (Criteria) this;
        }

        public Criteria andRepeatNumAEqualTo(Integer value) {
            addCriterion("repeat_num_a =", value, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumANotEqualTo(Integer value) {
            addCriterion("repeat_num_a <>", value, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumAGreaterThan(Integer value) {
            addCriterion("repeat_num_a >", value, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumAGreaterThanOrEqualTo(Integer value) {
            addCriterion("repeat_num_a >=", value, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumALessThan(Integer value) {
            addCriterion("repeat_num_a <", value, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumALessThanOrEqualTo(Integer value) {
            addCriterion("repeat_num_a <=", value, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumAIn(List<Integer> values) {
            addCriterion("repeat_num_a in", values, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumANotIn(List<Integer> values) {
            addCriterion("repeat_num_a not in", values, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumABetween(Integer value1, Integer value2) {
            addCriterion("repeat_num_a between", value1, value2, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumANotBetween(Integer value1, Integer value2) {
            addCriterion("repeat_num_a not between", value1, value2, "repeatNumA");
            return (Criteria) this;
        }

        public Criteria andNumsAIsNull() {
            addCriterion("nums_a is null");
            return (Criteria) this;
        }

        public Criteria andNumsAIsNotNull() {
            addCriterion("nums_a is not null");
            return (Criteria) this;
        }

        public Criteria andNumsAEqualTo(Integer value) {
            addCriterion("nums_a =", value, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsANotEqualTo(Integer value) {
            addCriterion("nums_a <>", value, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsAGreaterThan(Integer value) {
            addCriterion("nums_a >", value, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsAGreaterThanOrEqualTo(Integer value) {
            addCriterion("nums_a >=", value, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsALessThan(Integer value) {
            addCriterion("nums_a <", value, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsALessThanOrEqualTo(Integer value) {
            addCriterion("nums_a <=", value, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsAIn(List<Integer> values) {
            addCriterion("nums_a in", values, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsANotIn(List<Integer> values) {
            addCriterion("nums_a not in", values, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsABetween(Integer value1, Integer value2) {
            addCriterion("nums_a between", value1, value2, "numsA");
            return (Criteria) this;
        }

        public Criteria andNumsANotBetween(Integer value1, Integer value2) {
            addCriterion("nums_a not between", value1, value2, "numsA");
            return (Criteria) this;
        }

        public Criteria andAmountAIsNull() {
            addCriterion("amount_a is null");
            return (Criteria) this;
        }

        public Criteria andAmountAIsNotNull() {
            addCriterion("amount_a is not null");
            return (Criteria) this;
        }

        public Criteria andAmountAEqualTo(Double value) {
            addCriterion("amount_a =", value, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountANotEqualTo(Double value) {
            addCriterion("amount_a <>", value, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountAGreaterThan(Double value) {
            addCriterion("amount_a >", value, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountAGreaterThanOrEqualTo(Double value) {
            addCriterion("amount_a >=", value, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountALessThan(Double value) {
            addCriterion("amount_a <", value, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountALessThanOrEqualTo(Double value) {
            addCriterion("amount_a <=", value, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountAIn(List<Double> values) {
            addCriterion("amount_a in", values, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountANotIn(List<Double> values) {
            addCriterion("amount_a not in", values, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountABetween(Double value1, Double value2) {
            addCriterion("amount_a between", value1, value2, "amountA");
            return (Criteria) this;
        }

        public Criteria andAmountANotBetween(Double value1, Double value2) {
            addCriterion("amount_a not between", value1, value2, "amountA");
            return (Criteria) this;
        }

        public Criteria andFailNumsAIsNull() {
            addCriterion("fail_nums_a is null");
            return (Criteria) this;
        }

        public Criteria andFailNumsAIsNotNull() {
            addCriterion("fail_nums_a is not null");
            return (Criteria) this;
        }

        public Criteria andFailNumsAEqualTo(Integer value) {
            addCriterion("fail_nums_a =", value, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsANotEqualTo(Integer value) {
            addCriterion("fail_nums_a <>", value, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsAGreaterThan(Integer value) {
            addCriterion("fail_nums_a >", value, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsAGreaterThanOrEqualTo(Integer value) {
            addCriterion("fail_nums_a >=", value, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsALessThan(Integer value) {
            addCriterion("fail_nums_a <", value, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsALessThanOrEqualTo(Integer value) {
            addCriterion("fail_nums_a <=", value, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsAIn(List<Integer> values) {
            addCriterion("fail_nums_a in", values, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsANotIn(List<Integer> values) {
            addCriterion("fail_nums_a not in", values, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsABetween(Integer value1, Integer value2) {
            addCriterion("fail_nums_a between", value1, value2, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailNumsANotBetween(Integer value1, Integer value2) {
            addCriterion("fail_nums_a not between", value1, value2, "failNumsA");
            return (Criteria) this;
        }

        public Criteria andFailAmountAIsNull() {
            addCriterion("fail_amount_a is null");
            return (Criteria) this;
        }

        public Criteria andFailAmountAIsNotNull() {
            addCriterion("fail_amount_a is not null");
            return (Criteria) this;
        }

        public Criteria andFailAmountAEqualTo(Double value) {
            addCriterion("fail_amount_a =", value, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountANotEqualTo(Double value) {
            addCriterion("fail_amount_a <>", value, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountAGreaterThan(Double value) {
            addCriterion("fail_amount_a >", value, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountAGreaterThanOrEqualTo(Double value) {
            addCriterion("fail_amount_a >=", value, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountALessThan(Double value) {
            addCriterion("fail_amount_a <", value, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountALessThanOrEqualTo(Double value) {
            addCriterion("fail_amount_a <=", value, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountAIn(List<Double> values) {
            addCriterion("fail_amount_a in", values, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountANotIn(List<Double> values) {
            addCriterion("fail_amount_a not in", values, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountABetween(Double value1, Double value2) {
            addCriterion("fail_amount_a between", value1, value2, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andFailAmountANotBetween(Double value1, Double value2) {
            addCriterion("fail_amount_a not between", value1, value2, "failAmountA");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBIsNull() {
            addCriterion("repeat_num_b is null");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBIsNotNull() {
            addCriterion("repeat_num_b is not null");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBEqualTo(Integer value) {
            addCriterion("repeat_num_b =", value, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBNotEqualTo(Integer value) {
            addCriterion("repeat_num_b <>", value, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBGreaterThan(Integer value) {
            addCriterion("repeat_num_b >", value, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBGreaterThanOrEqualTo(Integer value) {
            addCriterion("repeat_num_b >=", value, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBLessThan(Integer value) {
            addCriterion("repeat_num_b <", value, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBLessThanOrEqualTo(Integer value) {
            addCriterion("repeat_num_b <=", value, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBIn(List<Integer> values) {
            addCriterion("repeat_num_b in", values, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBNotIn(List<Integer> values) {
            addCriterion("repeat_num_b not in", values, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBBetween(Integer value1, Integer value2) {
            addCriterion("repeat_num_b between", value1, value2, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andRepeatNumBNotBetween(Integer value1, Integer value2) {
            addCriterion("repeat_num_b not between", value1, value2, "repeatNumB");
            return (Criteria) this;
        }

        public Criteria andNumsBIsNull() {
            addCriterion("nums_b is null");
            return (Criteria) this;
        }

        public Criteria andNumsBIsNotNull() {
            addCriterion("nums_b is not null");
            return (Criteria) this;
        }

        public Criteria andNumsBEqualTo(Integer value) {
            addCriterion("nums_b =", value, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBNotEqualTo(Integer value) {
            addCriterion("nums_b <>", value, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBGreaterThan(Integer value) {
            addCriterion("nums_b >", value, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBGreaterThanOrEqualTo(Integer value) {
            addCriterion("nums_b >=", value, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBLessThan(Integer value) {
            addCriterion("nums_b <", value, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBLessThanOrEqualTo(Integer value) {
            addCriterion("nums_b <=", value, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBIn(List<Integer> values) {
            addCriterion("nums_b in", values, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBNotIn(List<Integer> values) {
            addCriterion("nums_b not in", values, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBBetween(Integer value1, Integer value2) {
            addCriterion("nums_b between", value1, value2, "numsB");
            return (Criteria) this;
        }

        public Criteria andNumsBNotBetween(Integer value1, Integer value2) {
            addCriterion("nums_b not between", value1, value2, "numsB");
            return (Criteria) this;
        }

        public Criteria andAmountBIsNull() {
            addCriterion("amount_b is null");
            return (Criteria) this;
        }

        public Criteria andAmountBIsNotNull() {
            addCriterion("amount_b is not null");
            return (Criteria) this;
        }

        public Criteria andAmountBEqualTo(Double value) {
            addCriterion("amount_b =", value, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBNotEqualTo(Double value) {
            addCriterion("amount_b <>", value, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBGreaterThan(Double value) {
            addCriterion("amount_b >", value, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBGreaterThanOrEqualTo(Double value) {
            addCriterion("amount_b >=", value, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBLessThan(Double value) {
            addCriterion("amount_b <", value, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBLessThanOrEqualTo(Double value) {
            addCriterion("amount_b <=", value, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBIn(List<Double> values) {
            addCriterion("amount_b in", values, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBNotIn(List<Double> values) {
            addCriterion("amount_b not in", values, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBBetween(Double value1, Double value2) {
            addCriterion("amount_b between", value1, value2, "amountB");
            return (Criteria) this;
        }

        public Criteria andAmountBNotBetween(Double value1, Double value2) {
            addCriterion("amount_b not between", value1, value2, "amountB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBIsNull() {
            addCriterion("fail_nums_b is null");
            return (Criteria) this;
        }

        public Criteria andFailNumsBIsNotNull() {
            addCriterion("fail_nums_b is not null");
            return (Criteria) this;
        }

        public Criteria andFailNumsBEqualTo(Integer value) {
            addCriterion("fail_nums_b =", value, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBNotEqualTo(Integer value) {
            addCriterion("fail_nums_b <>", value, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBGreaterThan(Integer value) {
            addCriterion("fail_nums_b >", value, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBGreaterThanOrEqualTo(Integer value) {
            addCriterion("fail_nums_b >=", value, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBLessThan(Integer value) {
            addCriterion("fail_nums_b <", value, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBLessThanOrEqualTo(Integer value) {
            addCriterion("fail_nums_b <=", value, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBIn(List<Integer> values) {
            addCriterion("fail_nums_b in", values, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBNotIn(List<Integer> values) {
            addCriterion("fail_nums_b not in", values, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBBetween(Integer value1, Integer value2) {
            addCriterion("fail_nums_b between", value1, value2, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailNumsBNotBetween(Integer value1, Integer value2) {
            addCriterion("fail_nums_b not between", value1, value2, "failNumsB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBIsNull() {
            addCriterion("fail_amount_b is null");
            return (Criteria) this;
        }

        public Criteria andFailAmountBIsNotNull() {
            addCriterion("fail_amount_b is not null");
            return (Criteria) this;
        }

        public Criteria andFailAmountBEqualTo(Double value) {
            addCriterion("fail_amount_b =", value, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBNotEqualTo(Double value) {
            addCriterion("fail_amount_b <>", value, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBGreaterThan(Double value) {
            addCriterion("fail_amount_b >", value, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBGreaterThanOrEqualTo(Double value) {
            addCriterion("fail_amount_b >=", value, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBLessThan(Double value) {
            addCriterion("fail_amount_b <", value, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBLessThanOrEqualTo(Double value) {
            addCriterion("fail_amount_b <=", value, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBIn(List<Double> values) {
            addCriterion("fail_amount_b in", values, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBNotIn(List<Double> values) {
            addCriterion("fail_amount_b not in", values, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBBetween(Double value1, Double value2) {
            addCriterion("fail_amount_b between", value1, value2, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andFailAmountBNotBetween(Double value1, Double value2) {
            addCriterion("fail_amount_b not between", value1, value2, "failAmountB");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumIsNull() {
            addCriterion("amount_err_num is null");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumIsNotNull() {
            addCriterion("amount_err_num is not null");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumEqualTo(Integer value) {
            addCriterion("amount_err_num =", value, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumNotEqualTo(Integer value) {
            addCriterion("amount_err_num <>", value, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumGreaterThan(Integer value) {
            addCriterion("amount_err_num >", value, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("amount_err_num >=", value, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumLessThan(Integer value) {
            addCriterion("amount_err_num <", value, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumLessThanOrEqualTo(Integer value) {
            addCriterion("amount_err_num <=", value, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumIn(List<Integer> values) {
            addCriterion("amount_err_num in", values, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumNotIn(List<Integer> values) {
            addCriterion("amount_err_num not in", values, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumBetween(Integer value1, Integer value2) {
            addCriterion("amount_err_num between", value1, value2, "amountErrNum");
            return (Criteria) this;
        }

        public Criteria andAmountErrNumNotBetween(Integer value1, Integer value2) {
            addCriterion("amount_err_num not between", value1, value2, "amountErrNum");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recon_order
     *
     * @mbggenerated do_not_delete_during_merge Tue Jan 09 15:16:01 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recon_order
     *
     * @mbggenerated Tue Jan 09 15:16:01 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}