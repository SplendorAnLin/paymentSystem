{"version":3,"file":"../content.css","sources":["content.scss","../base/global.scss"],"sourcesContent":["@charset 'utf-8';\n@import '../base/global.scss';\n/* \n * content.scss\n * 内容提供\n*/","@charset 'utf-8';\n\n/* ===主题颜色=== */\n// 蓝色 #03a9f4     橙色 #FF9800\n$Theme-color: #03a9f4;\n$Theme-color-light: lighten($Theme-color, 10%);\n$Theme-color-dark: darken($Theme-color, 10%);\n$Theme-gray-dark: #d3d3d3;\n$Theme-gray-middle: #eee;\n$Theme-gray-light: #f5f5f5;\n$Theme-text-primary: #333;\n$Theme-text-secondary: #666;\n$Theme-text-third: #999;\n$Theme-link: rgb(3, 169, 244); /* 链接 */\n$Theme-link-hover: rgb(44, 191, 255); /* 链接悬停 */\n\n\n/* ===环境变量=== */\n// 图片目录\n$images-path: \"../images/\";\n// 页面最小宽度\n$min-width: 1020px;\n// 字体\n$fonts: \"PingFang SC\",\"Microsoft yahei\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n// dpr\n$ratio: 54px;\n\n/* ===公用样式== */\n// 全尺寸样式\n%full-size {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n// 内联\n%ib {\n  display: inline-block;\n  zoom: 1; *display: inline;\n  letter-spacing: normal;\n  word-spacing: normal;\n  vertical-align: middle;\n}\n\n// 清除float浮动坍塌\n%fix {\n  zoom:1;\n  &:after {\n    display:block;\n    content:'.';\n    clear:both;\n    line-height:0;\n    visibility:hidden;\n  }\n\n}\n\n// 溢出隐藏\n%ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// 像素转em\n@function px2em($px, $base-font-size: 54px) {\n    @if (unitless($px)) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels for you\";\n        @return px2em($px + 0px); // That may fail.\n    } @else if (unit($px) == em) {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n@function px2rem($px, $base-font-size: 54px) {\n    @return (($px / $base-font-size) * 1rem);\n}\n\n\n\n\n\n\n\n// 混合宏\n@mixin px2rem($property, $px-values, $baseline-px:54px, $support-for-ie:false){\n    //Conver the baseline into rems\n    $baseline-rem: $baseline-px / 1rem * 1;\n    //Print the first line in pixel values\n    @if $support-for-ie {\n        #{$property}: $px-values;\n    }\n    //if there is only one (numeric) value, return the property/value line for it.\n    @if type-of($px-values) == \"number\"{\n        #{$property}: $px-values / $baseline-rem;\n    }\n    @else {\n        //Create an empty list that we can dump values into\n        $rem-values:();\n        @each $value in $px-values{\n            // If the value is zero or not a number, return it\n            @if $value == 0 or type-of($value) != \"number\"{\n                $rem-values: append($rem-values, $value / $baseline-rem);\n            }\n        }\n        // Return the property and its list of converted values\n        #{$property}: $rem-values;\n    }\n}"],"names":[],"mappings":";ACEA,wBAAwB;AAWO,YAAY;AACL,kBAAkB;AAGxD,wBAAwB;AAUxB,uBAAuB;ADzBvB;;;EAGE"}